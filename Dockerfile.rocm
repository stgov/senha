# Dockerfile optimizado para GPU/ROCm (AMD)
FROM rocm/pytorch:rocm6.1_ubuntu22.04_py3.10_pytorch_2.1.2

# Establecer variables de entorno
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    DEBIAN_FRONTEND=noninteractive \
    HSA_OVERRIDE_GFX_VERSION=10.3.0 \
    ROCM_PATH=/opt/rocm

# Actualizar Python a 3.12
RUN apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update && apt-get install -y --no-install-recommends \
    python3.12 \
    python3.12-venv \
    python3.12-dev \
    python3-pip \
    # Dependencias de OpenCV
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    # Dependencias para GUI (X11)
    libx11-6 \
    libxcb1 \
    libxau6 \
    libxdmcp6 \
    # Herramientas útiles
    v4l-utils \
    wget \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.12 1 \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1 \
    && rm -rf /var/lib/apt/lists/*

# Crear directorio de trabajo
WORKDIR /app

# Copiar requirements e instalar dependencias de Python
COPY requirements-gpu.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-gpu.txt

# Copiar el código de la aplicación
COPY person_tracker.py .
COPY model_downloader.py .

# Crear directorio para modelos
RUN mkdir -p /app/models

# Exponer variable de entorno para display
ENV DISPLAY=:0

# Usuario no root para mayor seguridad
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app

USER appuser

# Los modelos se descargarán automáticamente al ejecutar
CMD ["python", "person_tracker.py", "lite"]
